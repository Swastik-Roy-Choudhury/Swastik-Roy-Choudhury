name: Generate Snake Animation

# Trigger events for maximum compatibility
on:
  schedule:
    - cron: "0 */8 * * *" # Every 8 hours for better refresh rate
  workflow_dispatch: # Manual trigger
  push:
    branches: [ main, master ] # Support both main and master branches
  pull_request:
    branches: [ main, master ]

jobs:
  generate:
    # Use latest Ubuntu for better compatibility
    runs-on: ubuntu-latest
    
    # Set comprehensive permissions
    permissions:
      contents: write
      pages: write
      id-token: write
      actions: read
    
    # Increase timeout for slower connections
    timeout-minutes: 15
    
    # Set environment variables for cross-platform compatibility
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      # Checkout repository for better compatibility
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # Generate snake animation with multiple output formats
      - name: Generate Snake Animation
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: Swastik-Roy-Choudhury
          # Multiple outputs for different themes and devices
          outputs: |
            dist/snake.svg
            dist/snake-dark.svg?palette=github-dark&color_snake=blue&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
            dist/snake-light.svg?palette=github-light&color_snake=green&color_dots=#c6e48b,#7bc96f,#239a3b,#196127,#0d2818
            dist/snake-auto.svg?palette=github&color_snake=purple&color_dots=#ebedf0,#9be9a8,#40c463,#30a14e,#216e39
            dist/snake-minimal.svg?palette=github-dark&color_snake=#58a6ff&color_dots=#21262d,#0d1117,#30363d,#8b949e,#f0f6fc
            dist/snake-neon.svg?palette=github-dark&color_snake=#ff6e96&color_dots=#ff9a56,#ffad5a,#ffc93c,#06ffa5,#00d4aa
            dist/snake-ocean.svg?palette=github&color_snake=#0969da&color_dots=#dbeafe,#9fc5e8,#6faadb,#4493c9,#0969da
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Alternative generation method for fallback compatibility
      - name: Generate Snake Animation (Fallback)
        if: failure()
        uses: Platane/snk@v3
        with:
          github_user_name: Swastik-Roy-Choudhury
          outputs: |
            dist/snake-fallback.svg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Deploy to GitHub Pages with enhanced compatibility
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
          commit_message: "Update snake animations [automated]"
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          # Enable Jekyll for better GitHub Pages compatibility
          jekyll: false
          # Keep history for better tracking
          keep_history: false
          # Allow empty commits for consistency
          allow_empty_commit: false
          # Set custom domain support
          fqdn: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Create status check for monitoring
      - name: Create Status Check
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const status = '${{ job.status }}';
            const message = status === 'success' 
              ? '✅ Snake animation generated successfully!' 
              : '❌ Snake animation generation failed';
            console.log(message);
            
            // Set output for other workflows
            core.setOutput('status', status);
            core.setOutput('message', message);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Additional job for cross-platform testing
  compatibility-check:
    needs: generate
    runs-on: ${{ matrix.os }}
    
    # Test on multiple operating systems
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
      - name: Test Snake Animation Accessibility
        shell: bash
        run: |
          echo "Testing snake animation compatibility on ${{ matrix.os }}"
          
          # Test if the animation files are accessible
          curl -s -f "https://raw.githubusercontent.com/Swastik-Roy-Choudhury/Swastik-Roy-Choudhury/output/snake.svg" > /dev/null && echo "✅ Default snake accessible" || echo "❌ Default snake not accessible"
          curl -s -f "https://raw.githubusercontent.com/Swastik-Roy-Choudhury/Swastik-Roy-Choudhury/output/snake-dark.svg" > /dev/null && echo "✅ Dark snake accessible" || echo "❌ Dark snake not accessible"
          curl -s -f "https://raw.githubusercontent.com/Swastik-Roy-Choudhury/Swastik-Roy-Choudhury/output/snake-light.svg" > /dev/null && echo "✅ Light snake accessible" || echo "❌ Light snake not accessible"
          
          echo "Compatibility test completed for ${{ matrix.os }}"
